{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Using Native Android Content Providers.\
\
\
Android exposes several different Conte Providers that you can access directly using the techniques you\'92ve learned.\
\
Here\'92s a list of Content Providers that come with Android:\
\
1. Browser - reads or modifies browser and browser search history\
\
2. Calendar - Create new events, and deletes, updates and reads existing calendar entries.  Also, it gives access to modifying the attendee lists and setting reminders.\
\
3. Call Log and Blocked Numbers - Stores the Call Log Provider ( call history, including incoming and outgoing calls, missed calls, and call details, and so much more).\
\
4. Contacts - Retrieves, modifies, or stores contact details.\
\
5. Media Store - Provides centralized, managed access to the multimedia on your device, including audio, video, and images.\
\
So, for this challenge/Activity, you\'92ll be:\
\
 1. Choosing one of the above mentioned Android Content Providers\
\
 2. Implement that Content Provider.  For example, if you picked Contacts, they you\'92ll query the contacts provider and retrieve all contacts and any other data pertaining to each contact.\
\
3. Display the content you queried from the Content Provider either in a simple Textview ( using StringBuilder ), or in a RecyclerView.  \
\
Note: For each of these Content Providers, you\'92ll need to make sure that your emulator has the corresponding data stored.  Meaning, if for instance, you chose Contacts Content Provider, then you will need to add a few contacts in your emulator so that you are able to retrieve those contacts.  The same goes to all other Content Providers.\
\
 }